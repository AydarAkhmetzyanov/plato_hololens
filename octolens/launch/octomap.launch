<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>

	<node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />
      <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
      <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
        <remap from="~input" to="/octomap_point_cloud_centers" />
        <rosparam>
filter_field_name: z
filter_limit_min: 0.01
filter_limit_max: 3
filter_limit_negative: False
leaf_size: 0.3
       </rosparam>
     </node>

	<node pkg="nodelet" type="nodelet" name="velodyne_minimize" args="manager" output="screen" />
      <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
      <node pkg="nodelet" type="nodelet" name="voxel_grid_velodyne" args="load pcl/VoxelGrid pcl_manager" output="screen">
        <remap from="~input" to="/velodyne_points" />
        <rosparam>
filter_field_name: z
filter_limit_min: 0.01
filter_limit_max: 3
filter_limit_negative: False
leaf_size: 0.3
       </rosparam>
     </node>


	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
		<param name="resolution" value="0.1" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="map" />
		<param name="base_frame_id" type="string" value="map" />
		
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="10.0" />
		
		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/velodyne_points" />

		<param name="filter_ground" type="bool" value="true" />	
		<param name="ground_filter/distance" type="double" value="0.4" />	
		<param name="ground_filter/angle" type="double" value="0.3" />	
		<param name="ground_filter/plane_distance" type="double" value="0.3" />
			
		<param name="pointcloud_max_z" type="double" value="3" />
		<param name="pointcloud_min_z" type="double" value="0.1" />
		
		<param name="filter_speckles" type="bool" value="true" />
		
	</node>
</launch>